<?php

namespace AppBundle\Repository;

use AppBundle\Entity\User;
use AppBundle\Model\BaseInterface;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends BaseRepository
{

    /**
     * Custom User Creation
     *
     * @param User|BaseInterface $user
     *
     * @return User
     */
    public function save(BaseInterface $user)
    {
        if (!$user->getId()){
            //make sure to override the Creation of User
            //update Canonical Fields
            //update password 
            
        }

        parent::save($user);

        return $user;
    }

    /**
     * @param $email
     * @return null|object
     */
    public function findByEmail($email)
    {
        return $this->findOneBy([
            'email' => $email
        ]);
    }

    /**
     * @param $email_username
     *
     * @return null|object
     *
     * @internal param $email
     */
    public function findOneEnabledAndConfirmedByEmailOrUsername($email_username)
    {
        return $this->createQueryBuilder('u')
            ->where('u.email = :email_username')
            ->orWhere('u.username = :email_username')
            ->setParameter('email_username', $email_username)
            ->getQuery()
            ->getOneOrNullResult()
            ;
    }

    /**
     * @param $username
     * @return array
     */
    public function findByUsername($username)
    {
        return $this->createQueryBuilder('u')
            ->where('u.username LIKE :username')
            ->setParameter('username', "%$username%")
            ->getQuery()
            ->getResult()
        ;
    }

    /**
     * @param $username
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findOneByUsername($username)
    {
        return $this->createQueryBuilder('u')
            ->where('u.username = :username')
            ->setParameter('username', $username)
            ->getQuery()
            ->getOneOrNullResult()
        ;
    }

    /**
     * @param $confirmNameToken
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findOneByConfirmNameToken($confirmNameToken)
    {
        return $this->createQueryBuilder('u')
            ->where('u.confirmNameToken = :confirmNameToken')
            ->setParameter('confirmNameToken', $confirmNameToken)
            ->getQuery()
            ->getOneOrNullResult()
        ;
    }

    /**
     * @param $confirmationToken
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findOneByConfirmationToken($confirmationToken)
    {
        return $this->createQueryBuilder('u')
        ->where('u.confirmationToken = :confirmationToken')
        ->setParameter('confirmationToken', $confirmationToken)
        ->getQuery()
        ->getOneOrNullResult()
        ;
    }
}
